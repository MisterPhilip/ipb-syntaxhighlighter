<?xml version="1.0" encoding="utf-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name>SyntaxHighlighter: Skin Replacements</hook_name>
      <hook_desc>SyntaxHighlighter drop-in replacement for Prettify</hook_desc>
      <hook_author>Philip Lawrence</hook_author>
      <hook_email/>
      <hook_website>http://misterphilip.com</hook_website>
      <hook_update_check/>
      <hook_requirements><![CDATA[a:3:{s:21:"required_applications";a:0:{}s:20:"hook_php_version_min";s:0:"";s:20:"hook_php_version_max";s:0:"";}]]></hook_requirements>
      <hook_version_human>1.0.0</hook_version_human>
      <hook_version_long>10000</hook_version_long>
      <hook_extra_data><![CDATA[a:2:{s:7:"display";a:1:{s:8:"settings";s:32:"Setting groups: Code Highlighter";}s:13:"settingGroups";a:1:{i:0;s:16:"code_highlighter";}}]]></hook_extra_data>
      <hook_key>SyntaxHighlighter_Replacements</hook_key>
      <hook_global_caches/>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>SyntaxHighlighter_Replacements.php</hook_file_real>
      <hook_type>skinHooks</hook_type>
      <hook_classname>SyntaxHighlighter_Replacements</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:11:"skin_global";s:9:"skinGroup";N;s:12:"skinFunction";N;s:4:"type";N;s:2:"id";N;s:8:"position";N;}]]></hook_data>
      <hooks_source><![CDATA[class SyntaxHighlighter_Replacements extends (~extends~)
{
	public function include_highlighter( $load_when_needed=0 )
	{
$brushLoc = $this->settings['js_base_url'] . '/js/3rd_party/SyntaxHighlighter/';
$IPBHTML = "";
//--starthtml--//
$IPBHTML .= <<<EOF
	<script type="text/javascript" src="{$this->settings['js_base_url']}js/3rd_party/SyntaxHighlighter/shCore.js"></script>
	<script type="text/javascript" src="{$this->settings['js_base_url']}js/3rd_party/SyntaxHighlighter/shAutoloader.js"></script>
    <script type="text/javascript">
//<!#^#|CDATA|
Event.observe( window, 'load', function( e ) {    
    
    SyntaxHighlighter.autoloader(
      'applescript              {$brushLoc}shBrushAppleScript.js',
      'actionscript3 as3        {$brushLoc}shBrushAS3.js',
      'bash shell               {$brushLoc}shBrushBash.js',
      'coldfusion cf            {$brushLoc}shBrushColdFusion.js',
      'cpp c                    {$brushLoc}shBrushCpp.js',
      'c# c-sharp csharp        {$brushLoc}shBrushCSharp.js',
      'css                      {$brushLoc}shBrushCss.js',
      'delphi pascal            {$brushLoc}shBrushDelphi.js',
      'diff patch pas           {$brushLoc}shBrushDiff.js',
      'erl erlang               {$brushLoc}shBrushErlang.js',
      'groovy                   {$brushLoc}shBrushGroovy.js',
      'java                     {$brushLoc}shBrushJava.js',
      'jfx javafx               {$brushLoc}shBrushJavaFX.js',
      'js jscript javascript    {$brushLoc}shBrushJScript.js',
      'perl pl                  {$brushLoc}shBrushPerl.js',
      'php                      {$brushLoc}shBrushPhp.js',
      'text plain               {$brushLoc}shBrushPlain.js',
      'py python                {$brushLoc}shBrushPython.js',
      'ruby rails ror rb        {$brushLoc}shBrushRuby.js',
      'sass scss                {$brushLoc}shBrushSass.js',
      'scala                    {$brushLoc}shBrushScala.js',
      'sql                      {$brushLoc}shBrushSql.js',
      'vb vbnet                 {$brushLoc}shBrushVb.js',
      'xml xhtml xslt html auto {$brushLoc}shBrushXml.js'
    );
    
    SyntaxHighlighter.defaults['auto-links'] = {$this->settings['codesyntax_clickableURL']};
    SyntaxHighlighter.defaults['smart-tabs'] = {$this->settings['codesyntax_smartTabs']};
    SyntaxHighlighter.defaults['tab-size']   = parseInt({$this->settings['codesyntax_tabSize']});
    SyntaxHighlighter.defaults['collapse']   = {$this->settings['codesyntax_collapse']};
    
    SyntaxHighlighter.all();
});
var prettyPrint = function() { 
    SyntaxHighlighter.all(); 
};
	//|#^#]>
	</script>
EOF;
//--endhtml--//
return $IPBHTML;
	}
    
    function globalTemplate($html, $documentHeadItems, $css, $jsModules, $metaTags, array $header_items, $items=array(), $footer_items=array(), $stats=array())
    {
        // Add in the SyntaxHighlighter CSS file
        $settings = ipsRegistry::instance()->fetchSettings();
        $newFile = $settings['css_base_url'] . 'style_css/3rd_party/SyntaxHighlighter/shCore.css';
        $css['import'][$newFile] = array( 'content' => $newFile );
        $newFile = $settings['css_base_url'] . 'style_css/3rd_party/SyntaxHighlighter/shTheme.css';
        $css['import'][$newFile] = array( 'content' => $newFile );
        
        return parent::globalTemplate($html, $documentHeadItems, $css, $jsModules, $metaTags, $header_items, $items, $footer_items, $stats);
    }
}]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_settings>
    <setting>
      <conf_is_title>1</conf_is_title>
      <conf_title_title>Code Highlighter</conf_title_title>
      <conf_title_desc>Options for displaying code via SyntaxHighlighter</conf_title_desc>
      <conf_title_noshow>0</conf_title_noshow>
      <conf_title_keyword>code_highlighter</conf_title_keyword>
      <conf_title_app>core</conf_title_app>
      <conf_title_tab>System</conf_title_tab>
    </setting>
    <setting>
      <conf_id>347</conf_id>
      <conf_title>Enable clickable URLs</conf_title>
      <conf_description><![CDATA[Allows you to turn detection of links in the highlighted element on and off. If the option is turned off, URLs wonâ€™t be clickable. (<a href="http://alexgorbatchev.com/SyntaxHighlighter/manual/demo/auto-links.html">Demo</a>)<br /><br />
<strong>URLs are not filtered against a black/whitelist, nor do they have rel="no-follow". Use with caution</strong>]]></conf_description>
      <conf_group>37</conf_group>
      <conf_type>yes_no</conf_type>
      <conf_key>codesyntax_clickableURL</conf_key>
      <conf_value/>
      <conf_default>0</conf_default>
      <conf_extra/>
      <conf_evalphp/>
      <conf_protected>1</conf_protected>
      <conf_position>2</conf_position>
      <conf_start_group>SyntaxHighlighter Options</conf_start_group>
      <conf_add_cache>1</conf_add_cache>
      <conf_keywords>code syntax highlighter highlight url</conf_keywords>
      <conf_title_keyword>code_highlighter</conf_title_keyword>
      <conf_is_title>0</conf_is_title>
    </setting>
    <setting>
      <conf_id>350</conf_id>
      <conf_title>Display collapsed</conf_title>
      <conf_description><![CDATA[Should the code box be collapsed (similar to a spoiler tag) on page load? (<a href="http://alexgorbatchev.com/SyntaxHighlighter/manual/demo/collapse.html">Demo</a>)]]></conf_description>
      <conf_group>37</conf_group>
      <conf_type>yes_no</conf_type>
      <conf_key>codesyntax_collapse</conf_key>
      <conf_value/>
      <conf_default>0</conf_default>
      <conf_extra/>
      <conf_evalphp/>
      <conf_protected>1</conf_protected>
      <conf_position>5</conf_position>
      <conf_start_group/>
      <conf_add_cache>1</conf_add_cache>
      <conf_keywords>code syntax highlighter highlight</conf_keywords>
      <conf_title_keyword>code_highlighter</conf_title_keyword>
      <conf_is_title>0</conf_is_title>
    </setting>
    <setting>
      <conf_id>346</conf_id>
      <conf_title>Parse outdated bbcodes?</conf_title>
      <conf_description><![CDATA[Should the old bbcodes (html, php, sql, xml) be parsed too?
<!--NOTICE-->]]></conf_description>
      <conf_group>37</conf_group>
      <conf_type>yes_no</conf_type>
      <conf_key>codesyntax_parseOld</conf_key>
      <conf_value/>
      <conf_default>0</conf_default>
      <conf_extra/>
      <conf_evalphp><![CDATA[if( $show == 1 )
{
    if( $value == 1 )
    {
        $bbcodes = $this->registry->cache()->getCache('bbcode');
        $bbcode = $bbcodes['codesyntax'];
        
        $aliases = explode( ',', trim( $bbcode['bbcode_aliases'] ) );
        $old = array( 'html','php','sql','xml' );
        
        $missing = array_diff( $old, $aliases );
        $isMissing = ( count( $missing ) > 0 );
        
        $stillExist = array();
        foreach( $old as $oldCode )
            if( isset( $bbcodes[ $oldCode ] ) )
                $stillExist[] = $oldCode;
        $doesExist = ( count( $stillExist ) > 0 );
         
        if( $isMissing || $doesExist )
        {
            $string = '<br /><br /><strong><span style="color:red">NOTICE:</span><br />';
            
            if( $doesExist )
                $string.= 'You need to remove the old BBCodes: ' . implode( ', ', $stillExist );
            if( $isMissing && $doesExist )
                $string.= '<br />';
            if( $isMissing ) 
                $string.= 'You need to add these aliases to the codesyntax BBCode: "' . implode( ', ', $missing ) . '"';
            
            $string.= '</strong>';
        
            $r['conf_description'] = str_replace( '<!--NOTICE-->', $string, $r['conf_description'] );
        }
	}
}]]></conf_evalphp>
      <conf_protected>1</conf_protected>
      <conf_position>1</conf_position>
      <conf_start_group>General Options</conf_start_group>
      <conf_add_cache>1</conf_add_cache>
      <conf_keywords>code highlighter syntax</conf_keywords>
      <conf_title_keyword>code_highlighter</conf_title_keyword>
      <conf_is_title>0</conf_is_title>
    </setting>
    <setting>
      <conf_id>349</conf_id>
      <conf_title>Smart Tabs</conf_title>
      <conf_description><![CDATA[Enables the smart tabs feature (<a href="http://alexgorbatchev.com/SyntaxHighlighter/manual/demo/smart-tabs.html">Demo</a>)]]></conf_description>
      <conf_group>37</conf_group>
      <conf_type>yes_no</conf_type>
      <conf_key>codesyntax_smartTabs</conf_key>
      <conf_value/>
      <conf_default/>
      <conf_extra/>
      <conf_evalphp/>
      <conf_protected>1</conf_protected>
      <conf_position>4</conf_position>
      <conf_start_group/>
      <conf_add_cache>1</conf_add_cache>
      <conf_keywords>code syntax highlighter highlight tab tabs</conf_keywords>
      <conf_title_keyword>code_highlighter</conf_title_keyword>
      <conf_is_title>0</conf_is_title>
    </setting>
    <setting>
      <conf_id>348</conf_id>
      <conf_title>Tab size</conf_title>
      <conf_description><![CDATA[The size of a tab, in spaces. (<a href="http://alexgorbatchev.com/SyntaxHighlighter/manual/demo/tab-size.html">Demo</a>)]]></conf_description>
      <conf_group>37</conf_group>
      <conf_type>input</conf_type>
      <conf_key>codesyntax_tabSize</conf_key>
      <conf_value/>
      <conf_default>4</conf_default>
      <conf_extra/>
      <conf_evalphp/>
      <conf_protected>1</conf_protected>
      <conf_position>3</conf_position>
      <conf_start_group/>
      <conf_add_cache>1</conf_add_cache>
      <conf_keywords>code syntax highlighter highlight tab tabs</conf_keywords>
      <conf_title_keyword>code_highlighter</conf_title_keyword>
      <conf_is_title>0</conf_is_title>
    </setting>
  </hookextras_settings>
  <hookextras_language/>
  <hookextras_modules/>
  <hookextras_help/>
  <hookextras_templates/>
  <hookextras_css/>
  <hookextras_replacements/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>